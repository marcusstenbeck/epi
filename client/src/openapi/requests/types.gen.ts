// This file is auto-generated by @hey-api/openapi-ts

export type DetailedPlaylist = {
    readonly id: number;
    name: string;
    tracks: Array<Track>;
};

export type PatchedPlaylist = {
    readonly id?: number;
    name?: string;
    tracks?: Array<(string)>;
};

export type PatchedTrack = {
    id?: string;
    title?: string;
    length?: number;
    bpm?: number;
    genres?: Array<(string)>;
    moods?: Array<(string)>;
    main_artists?: Array<(string)>;
    featured_artists?: Array<(string)>;
    readonly audio?: string;
    readonly cover_art?: string;
    readonly waveform?: string;
    readonly spotify?: string;
};

export type Playlist = {
    readonly id: number;
    name: string;
    tracks: Array<(string)>;
};

export type Track = {
    id: string;
    title: string;
    length?: number;
    bpm?: number;
    genres: Array<(string)>;
    moods: Array<(string)>;
    main_artists: Array<(string)>;
    featured_artists: Array<(string)>;
    readonly audio: string;
    readonly cover_art: string;
    readonly waveform: string;
    readonly spotify: string;
};

export type PlaylistsListResponse = (Array<Playlist>);

export type PlaylistsListError = unknown;

export type PlaylistsCreateData = {
    body: Playlist;
};

export type PlaylistsCreateResponse = (Playlist);

export type PlaylistsCreateError = unknown;

export type PlaylistsRetrieveData = {
    path: {
        /**
         * A unique integer value identifying this playlist.
         */
        id: number;
    };
};

export type PlaylistsRetrieveResponse = (DetailedPlaylist);

export type PlaylistsRetrieveError = unknown;

export type PlaylistsUpdateData = {
    body: Playlist;
    path: {
        /**
         * A unique integer value identifying this playlist.
         */
        id: number;
    };
};

export type PlaylistsUpdateResponse = (Playlist);

export type PlaylistsUpdateError = unknown;

export type PlaylistsPartialUpdateData = {
    body?: PatchedPlaylist;
    path: {
        /**
         * A unique integer value identifying this playlist.
         */
        id: number;
    };
};

export type PlaylistsPartialUpdateResponse = (Playlist);

export type PlaylistsPartialUpdateError = unknown;

export type PlaylistsDestroyData = {
    path: {
        /**
         * A unique integer value identifying this playlist.
         */
        id: number;
    };
};

export type PlaylistsDestroyResponse = (void);

export type PlaylistsDestroyError = unknown;

export type SchemaRetrieveData = {
    query?: {
        format?: 'json' | 'yaml';
        lang?: 'af' | 'ar' | 'ar-dz' | 'ast' | 'az' | 'be' | 'bg' | 'bn' | 'br' | 'bs' | 'ca' | 'cs' | 'cy' | 'da' | 'de' | 'dsb' | 'el' | 'en' | 'en-au' | 'en-gb' | 'eo' | 'es' | 'es-ar' | 'es-co' | 'es-mx' | 'es-ni' | 'es-ve' | 'et' | 'eu' | 'fa' | 'fi' | 'fr' | 'fy' | 'ga' | 'gd' | 'gl' | 'he' | 'hi' | 'hr' | 'hsb' | 'hu' | 'hy' | 'ia' | 'id' | 'ig' | 'io' | 'is' | 'it' | 'ja' | 'ka' | 'kab' | 'kk' | 'km' | 'kn' | 'ko' | 'ky' | 'lb' | 'lt' | 'lv' | 'mk' | 'ml' | 'mn' | 'mr' | 'ms' | 'my' | 'nb' | 'ne' | 'nl' | 'nn' | 'os' | 'pa' | 'pl' | 'pt' | 'pt-br' | 'ro' | 'ru' | 'sk' | 'sl' | 'sq' | 'sr' | 'sr-latn' | 'sv' | 'sw' | 'ta' | 'te' | 'tg' | 'th' | 'tk' | 'tr' | 'tt' | 'udm' | 'uk' | 'ur' | 'uz' | 'vi' | 'zh-hans' | 'zh-hant';
    };
};

export type SchemaRetrieveResponse = ({
    [key: string]: unknown;
});

export type SchemaRetrieveError = unknown;

export type TracksListResponse = (Array<Track>);

export type TracksListError = unknown;

export type TracksCreateData = {
    body: Track;
};

export type TracksCreateResponse = (Track);

export type TracksCreateError = unknown;

export type TracksRetrieveData = {
    path: {
        /**
         * A unique value identifying this track.
         */
        id: string;
    };
};

export type TracksRetrieveResponse = (Track);

export type TracksRetrieveError = unknown;

export type TracksUpdateData = {
    body: Track;
    path: {
        /**
         * A unique value identifying this track.
         */
        id: string;
    };
};

export type TracksUpdateResponse = (Track);

export type TracksUpdateError = unknown;

export type TracksPartialUpdateData = {
    body?: PatchedTrack;
    path: {
        /**
         * A unique value identifying this track.
         */
        id: string;
    };
};

export type TracksPartialUpdateResponse = (Track);

export type TracksPartialUpdateError = unknown;

export type TracksDestroyData = {
    path: {
        /**
         * A unique value identifying this track.
         */
        id: string;
    };
};

export type TracksDestroyResponse = (void);

export type TracksDestroyError = unknown;